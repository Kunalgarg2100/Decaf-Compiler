CLASS
PROGRAM
COB:{
DATA_TYPE:int
IDENTIFER:arr
SOB:[
INTEGER_LITERAL:110
SCB:]
SEMICOLON:;
VOID
IDENTIFER:initialize
OB:(
DATA_TYPE:int
IDENTIFER:n
CB:)
COB:{
FOR
IDENTIFER:i
EQ:=
INTEGER_LITERAL:0
COMMA:,
IDENTIFER:n
SUB:-
INTEGER_LITERAL:1
COB:{
IDENTIFER:arr
SOB:[
IDENTIFER:i
SCB:]
EQ:=
IDENTIFER:n
SUB:-
IDENTIFER:i
SEMICOLON:;
CCB:}
FOR
IDENTIFER:i
EQ:=
INTEGER_LITERAL:0
COMMA:,
INTEGER_LITERAL:10
COB:{
CALLOUT
OB:(
STRING:"printf"
COMMA:,
STRING:"%d "
COMMA:,
IDENTIFER:arr
SOB:[
IDENTIFER:i
SCB:]
CB:)
SEMICOLON:;
CCB:}
CALLOUT
OB:(
STRING:"printf"
COMMA:,
STRING:"\n"
CB:)
SEMICOLON:;
CCB:}
VOID
IDENTIFER:nextMax
OB:(
DATA_TYPE:int
IDENTIFER:n
CB:)
COB:{
DATA_TYPE:int
IDENTIFER:max1
COMMA:,
IDENTIFER:max2
SEMICOLON:;
IF
OB:(
IDENTIFER:n
LT:<
INTEGER_LITERAL:2
CB:)
COB:{
CALLOUT
OB:(
STRING:"printf"
COMMA:,
STRING:"Invalid Input"
CB:)
SEMICOLON:;
CCB:}
IDENTIFER:max1
EQ:=
SUB:-
INTEGER_LITERAL:1
SEMICOLON:;
IDENTIFER:max2
EQ:=
SUB:-
INTEGER_LITERAL:1
SEMICOLON:;
FOR
IDENTIFER:i
EQ:=
INTEGER_LITERAL:0
COMMA:,
IDENTIFER:n
SUB:-
INTEGER_LITERAL:1
COB:{
IF
OB:(
IDENTIFER:arr
SOB:[
IDENTIFER:i
SCB:]
GT:>
IDENTIFER:max1
CB:)
COB:{
IDENTIFER:max2
EQ:=
IDENTIFER:max1
SEMICOLON:;
IDENTIFER:max1
EQ:=
IDENTIFER:arr
SOB:[
IDENTIFER:i
SCB:]
SEMICOLON:;
CCB:}
ELSE
COB:{
IF
OB:(
IDENTIFER:arr
SOB:[
IDENTIFER:i
SCB:]
GT:>
IDENTIFER:max2
CB:)
COB:{
IF
OB:(
IDENTIFER:arr
SOB:[
IDENTIFER:i
SCB:]
NEQ:!=
IDENTIFER:max1
CB:)
COB:{
IDENTIFER:max2
EQ:=
IDENTIFER:arr
SOB:[
IDENTIFER:i
SCB:]
SEMICOLON:;
CCB:}
CCB:}
CCB:}
CCB:}
IF
OB:(
IDENTIFER:max2
EQEQ:==
SUB:-
INTEGER_LITERAL:1
CB:)
COB:{
CALLOUT
OB:(
STRING:"printf"
COMMA:,
STRING:"No second largest element"
CB:)
SEMICOLON:;
CCB:}
ELSE
COB:{
CALLOUT
OB:(
STRING:"printf"
COMMA:,
STRING:"Second Largest element is %d"
COMMA:,
IDENTIFER:max2
CB:)
SEMICOLON:;
CCB:}
CCB:}
VOID
IDENTIFER:main
OB:(
CB:)
COB:{
DATA_TYPE:int
IDENTIFER:n
SEMICOLON:;
IDENTIFER:n
EQ:=
INTEGER_LITERAL:100
SEMICOLON:;
IDENTIFER:initialize
OB:(
IDENTIFER:n
CB:)
SEMICOLON:;
IDENTIFER:nextMax
OB:(
IDENTIFER:n
CB:)
SEMICOLON:;
CCB:}
CCB:}
