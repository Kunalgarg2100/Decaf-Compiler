CLASS
PROGRAM
COB:{
DATA_TYPE:int
IDENTIFER:inp
SOB:[
INTEGER_LITERAL:100
SCB:]
SEMICOLON:;
VOID
IDENTIFER:initialize
OB:(
DATA_TYPE:int
IDENTIFER:n
CB:)
COB:{
DATA_TYPE:int
IDENTIFER:i
SEMICOLON:;
FOR
IDENTIFER:i
EQ:=
INTEGER_LITERAL:0
COMMA:,
IDENTIFER:n
COB:{
IDENTIFER:inp
SOB:[
IDENTIFER:i
SCB:]
EQ:=
IDENTIFER:n
SUB:-
IDENTIFER:i
SEMICOLON:;
CCB:}
FOR
IDENTIFER:i
EQ:=
INTEGER_LITERAL:0
COMMA:,
IDENTIFER:n
COB:{
CALLOUT
OB:(
STRING:"printf"
COMMA:,
STRING:"%d "
COMMA:,
IDENTIFER:inp
SOB:[
IDENTIFER:i
SCB:]
CB:)
SEMICOLON:;
CCB:}
CALLOUT
OB:(
STRING:"printf"
COMMA:,
STRING:"\n"
CB:)
SEMICOLON:;
CCB:}
VOID
IDENTIFER:bubblesort
OB:(
DATA_TYPE:int
IDENTIFER:n
CB:)
COB:{
DATA_TYPE:int
IDENTIFER:i
SEMICOLON:;
DATA_TYPE:int
IDENTIFER:tmp
SEMICOLON:;
FOR
IDENTIFER:i
EQ:=
INTEGER_LITERAL:0
COMMA:,
IDENTIFER:n
COB:{
FOR
IDENTIFER:j
EQ:=
INTEGER_LITERAL:0
COMMA:,
IDENTIFER:n
SUB:-
IDENTIFER:i
SUB:-
INTEGER_LITERAL:1
COB:{
IF
OB:(
IDENTIFER:inp
SOB:[
IDENTIFER:j
SCB:]
GT:>
IDENTIFER:inp
SOB:[
IDENTIFER:j
ADD:+
INTEGER_LITERAL:1
SCB:]
CB:)
COB:{
IDENTIFER:tmp
EQ:=
IDENTIFER:inp
SOB:[
IDENTIFER:j
SCB:]
SEMICOLON:;
IDENTIFER:inp
SOB:[
IDENTIFER:j
SCB:]
EQ:=
IDENTIFER:inp
SOB:[
IDENTIFER:j
ADD:+
INTEGER_LITERAL:1
SCB:]
SEMICOLON:;
IDENTIFER:inp
SOB:[
IDENTIFER:j
ADD:+
INTEGER_LITERAL:1
SCB:]
EQ:=
IDENTIFER:tmp
SEMICOLON:;
CCB:}
CCB:}
CCB:}
FOR
IDENTIFER:i
EQ:=
INTEGER_LITERAL:0
COMMA:,
IDENTIFER:n
COB:{
CALLOUT
OB:(
STRING:"printf"
COMMA:,
STRING:"%d "
COMMA:,
IDENTIFER:inp
SOB:[
IDENTIFER:i
SCB:]
CB:)
SEMICOLON:;
CCB:}
CALLOUT
OB:(
STRING:"printf"
COMMA:,
STRING:"\n"
CB:)
SEMICOLON:;
CCB:}
VOID
IDENTIFER:main
OB:(
CB:)
COB:{
DATA_TYPE:int
IDENTIFER:n
SEMICOLON:;
IDENTIFER:n
EQ:=
INTEGER_LITERAL:10
SEMICOLON:;
IDENTIFER:initialize
OB:(
IDENTIFER:n
CB:)
SEMICOLON:;
IDENTIFER:bubblesort
OB:(
IDENTIFER:n
CB:)
SEMICOLON:;
CCB:}
CCB:}
