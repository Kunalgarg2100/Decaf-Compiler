; ModuleID = 'Decaff'
source_filename = "Decaff"

@sum = common global i32 0
@n = common global i32 0
@k = common global [5 x i32] zeroinitializer
@p = common global i32 0
@x = common global i1 false
@0 = private unnamed_addr constant [6 x i8] c"123\5Cn\00"
@1 = private unnamed_addr constant [6 x i8] c"223\5Cn\00"
@2 = private unnamed_addr constant [5 x i8] c"%d\5Cn\00"
@3 = private unnamed_addr constant [5 x i8] c"%d\5Cn\00"

define i32 @fun(i32 %n, i32 %m) {
entry:
  %m2 = alloca i32, align 4
  %n1 = alloca i32, align 4
  store i32 %n, i32* %n1, align 4
  store i32 %m, i32* %m2, align 4
  ret i32 0
}

define void @main() {
entry:
  %m = alloca i32, align 4
  %l = alloca i32, align 4
  store i32 0, i32* %l, align 4
  store i32 0, i32* %m, align 4
  store i32 6, i32* %m, align 4
  %0 = load i32, i32* %m
  %gtop = icmp sgt i32 %0, 5
  br i1 %gtop, label %then, label %else3

then:                                             ; preds = %entry
  store i32 3, i32* %m, align 4
  %1 = load i32, i32* %m
  %gtop1 = icmp sgt i32 %1, 4
  br i1 %gtop1, label %then2, label %else

then2:                                            ; preds = %then
  store i32 1, i32* %m, align 4
  br label %ifcont

else:                                             ; preds = %then
  store i32 12, i32* %m, align 4
  br label %ifcont

ifcont:                                           ; preds = %else, %then2
  br label %ifcont4

else3:                                            ; preds = %entry
  store i32 2, i32* %m, align 4
  br label %ifcont4

ifcont4:                                          ; preds = %else3, %ifcont
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @0, i32 0, i32 0))
  %call5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1, i32 0, i32 0))
  %call6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @2, i32 0, i32 0), i32 5)
  %2 = load i32, i32* %m
  %call7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @3, i32 0, i32 0), i32 %2)
  ret void
}

declare i32 @printf(i8*, ...)
