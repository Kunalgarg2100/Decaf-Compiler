; ModuleID = 'Decaff'
source_filename = "Decaff"

@0 = private unnamed_addr constant [5 x i8] c"%d\5Cn\00"

define i32 @x(i32 %a) {
entry:
  %a1 = alloca i32, align 4
  store i32 %a, i32* %a1, align 4
  %0 = load i32, i32* %a1
  %eqop = icmp eq i32 %0, 0
  br i1 %eqop, label %then, label %else

then:                                             ; preds = %entry
  ret i32 1

else:                                             ; preds = %entry
  %1 = load i32, i32* %a1
  %2 = load i32, i32* %a1
  %subop = sub i32 %2, 1
  %3 = call i32 @x(i32 %subop)
  %multop = mul i32 %1, %3
  ret i32 %multop
  br label %ifcont

ifcont:                                           ; preds = %else
  ret i32 0
}

define i32 @main() {
entry:
  %y = alloca i32, align 4
  store i32 0, i32* %y, align 4
  %0 = call i32 @x(i32 10)
  store i32 %0, i32* %y, align 4
  %1 = load i32, i32* %y
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i32 0, i32 0), i32 %1)
  ret i32 %call
}

declare i32 @printf(i8*, ...)
