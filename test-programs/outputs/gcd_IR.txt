; ModuleID = 'Decaff'
source_filename = "Decaff"

@0 = private unnamed_addr constant [12 x i8] c"gcd is %d\5Cn\00"

define i32 @gcd(i32 %a, i32 %b) {
entry:
  %b2 = alloca i32, align 4
  %a1 = alloca i32, align 4
  store i32 %a, i32* %a1, align 4
  store i32 %b, i32* %b2, align 4
  %0 = load i32, i32* %b2
  %eqop = icmp eq i32 %0, 0
  br i1 %eqop, label %then, label %else

then:                                             ; preds = %entry
  %1 = load i32, i32* %a1
  ret i32 %1

else:                                             ; preds = %entry
  br label %ifcont

ifcont:                                           ; preds = %else
  %2 = load i32, i32* %b2
  %3 = load i32, i32* %a1
  %4 = load i32, i32* %b2
  %modop = srem i32 %3, %4
  %5 = call i32 @gcd(i32 %2, i32 %modop)
  ret i32 %5
}

define void @main() {
entry:
  %a = alloca i32, align 4
  store i32 0, i32* %a, align 4
  %0 = call i32 @gcd(i32 30, i32 16)
  store i32 %0, i32* %a, align 4
  %1 = load i32, i32* %a
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0), i32 %1)
  ret void
}

declare i32 @printf(i8*, ...)
