ProgramASTnode
FielddecllistASTnode
FielddeclASTnode
VarlistASTnode
IdASTnode
<id = inp , size = 110 >
FielddeclASTnode
VarlistASTnode
IdASTnode
<id = tmp , size = 110 >
MethoddecllistASTnode
MethoddeclASTnode
<returntype = void
<methodname = main
IdtypelistASTnode
BlockstatementASTnode
VardecllistASTnode
VardeclASTnode
<datatype = int
IdlistASTnode
IdASTnode
<id = n >
StatementlistASTnode
AssignstatementASTnode
LocationASTnode
<varname = n
<operator = =
IntLitExprASTnode
<integer value = "90">
DefinedMethodASTnode
defined method name = initialize
MethodArgsASTnode
LocationASTnode
<varname = n
DefinedMethodASTnode
defined method name = mergesort
MethodArgsASTnode
IntLitExprASTnode
<integer value = "0">
BinaryExprASTnode
LocationASTnode
<varname = n
IntLitExprASTnode
<integer value = "1">
binop is -
ForstatementASTnode
<varname = i
Initial condn
IntLitExprASTnode
<integer value = "0">
Break condn
IntLitExprASTnode
<integer value = "10">
Block statement
BlockstatementASTnode
VardecllistASTnode
StatementlistASTnode
CalloutMethodASTnode
<call out methodname = printf
CalloutArgsASTnode
StringargASTnode
<string arg = %d 
ExprargASTnode
LocationASTnode
<varname = inp
LocationASTnode
<varname = i
CalloutMethodASTnode
<call out methodname = printf
CalloutArgsASTnode
StringargASTnode
<string arg = \n
MethoddeclASTnode
<returntype = void
<methodname = initialize
IdtypelistASTnode
IdtypeASTnode
datatype = int
var_name = n
BlockstatementASTnode
VardecllistASTnode
VardeclASTnode
<datatype = int
IdlistASTnode
IdASTnode
<id = i >
StatementlistASTnode
ForstatementASTnode
<varname = i
Initial condn
IntLitExprASTnode
<integer value = "0">
Break condn
BinaryExprASTnode
LocationASTnode
<varname = n
IntLitExprASTnode
<integer value = "1">
binop is -
Block statement
BlockstatementASTnode
VardecllistASTnode
StatementlistASTnode
AssignstatementASTnode
LocationASTnode
<varname = inp
LocationASTnode
<varname = i
<operator = =
BinaryExprASTnode
LocationASTnode
<varname = n
LocationASTnode
<varname = i
binop is -
ForstatementASTnode
<varname = i
Initial condn
IntLitExprASTnode
<integer value = "0">
Break condn
IntLitExprASTnode
<integer value = "10">
Block statement
BlockstatementASTnode
VardecllistASTnode
StatementlistASTnode
CalloutMethodASTnode
<call out methodname = printf
CalloutArgsASTnode
StringargASTnode
<string arg = %d 
ExprargASTnode
LocationASTnode
<varname = inp
LocationASTnode
<varname = i
CalloutMethodASTnode
<call out methodname = printf
CalloutArgsASTnode
StringargASTnode
<string arg = \n
MethoddeclASTnode
<returntype = void
<methodname = mergesort
IdtypelistASTnode
IdtypeASTnode
datatype = int
var_name = s
IdtypeASTnode
datatype = int
var_name = e
BlockstatementASTnode
VardecllistASTnode
VardeclASTnode
<datatype = int
IdlistASTnode
IdASTnode
<id = m >
StatementlistASTnode
IfelseASTnode
Condition
BinaryExprASTnode
LocationASTnode
<varname = s
LocationASTnode
<varname = e
binop is >=
If statement
BlockstatementASTnode
VardecllistASTnode
StatementlistASTnode
ReturnstatementASTnode
Else statement
BlockstatementASTnode
VardecllistASTnode
StatementlistASTnode
AssignstatementASTnode
LocationASTnode
<varname = m
<operator = =
BinaryExprASTnode
BinaryExprASTnode
LocationASTnode
<varname = s
LocationASTnode
<varname = e
binop is +
IntLitExprASTnode
<integer value = "2">
binop is /
DefinedMethodASTnode
defined method name = mergesort
MethodArgsASTnode
LocationASTnode
<varname = s
LocationASTnode
<varname = m
DefinedMethodASTnode
defined method name = mergesort
MethodArgsASTnode
BinaryExprASTnode
LocationASTnode
<varname = m
IntLitExprASTnode
<integer value = "1">
binop is +
LocationASTnode
<varname = e
DefinedMethodASTnode
defined method name = merge
MethodArgsASTnode
LocationASTnode
<varname = s
LocationASTnode
<varname = m
LocationASTnode
<varname = e
ReturnstatementASTnode
MethoddeclASTnode
<returntype = void
<methodname = merge
IdtypelistASTnode
IdtypeASTnode
datatype = int
var_name = l
IdtypeASTnode
datatype = int
var_name = mid
IdtypeASTnode
datatype = int
var_name = r
BlockstatementASTnode
VardecllistASTnode
VardeclASTnode
<datatype = 